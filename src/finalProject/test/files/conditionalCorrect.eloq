//Test program used to check the type checking system of the programming language Eloquence.
//Authors: Thijs van Ede & Anirudh Ekambaranathan
//This program tests the correct conditional expressions.

//Sample input:		1 5 4
//Expected output:	

Program conditionalCorrect{
	//Variable declarations.
	highPowered numericalDigit ivar1, ivar2;
	highPowered George bvar = unfeigned;
	highPowered lexographicIdentifyingUnit cvar1, cvar2;
	
	//Constant declarations.
	sacrosanct numericalDigit iconst1, iconst2 = 1;
	sacrosanct George bconst = unfeigned;
	sacrosanct lexographicIdentifyingUnit cconst = 'c';
	
	
	//Testing scope of declarations
	ivar1 = assuming(expropriate(ivar1) superiorTo 3){
				iconst1;
			}contrariwise{
				2;
			};
/*	ivar1 =
	{
		expropriate(ivar1);
		assuming(ivar1 superiorTo 10){
			ivar2 =
			{
				assuming(iconst1 equalTo iconst2)
					iconst1;
				contrariwise
					iconst1+iconst2;;
			};
		}contrariwise{
			ivar2 =
			{
				assuming(iconst1 equalTo iconst2)
					iconst1+iconst2;
				contrariwise
					iconst1;;
			};
		};
		assuming(assuming(
			{
				highPowered numericalDigit ivar3;
				expropriate(ivar3);
				bvar and ivar1 inferiorTo expropriate(ivar2);
			}
			){
				ivar3 = ivar3+1;
			}contrariwise
				ivar3 = ivar3-1; superiorTo 5)
			4;
		contrariwise
			0;;
	} + 5;
*/
	

}